name: GitHub Actions Build and Deploy

on:
  workflow_dispatch: # 手动触发开关（已启用）
  push:
    branches: [ main ]

permissions:
  contents: write

env:
  TZ: Asia/Shanghai

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Build
        env:
          APP_BASE_PATH: /${{ github.repository }}
        run: pnpm install --no-frozen-lockfile && pnpm run build

      # 新增：部署前清理服务器旧文件
      - name: Clean remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            # 保留目录结构，仅删除内容
            sudo rm -rf /home/vitepress/dist/*
            # 保险措施：如果目录被误删则重建
            sudo mkdir -p /home/vitepress/dist

      - name: Debug SSH Connection
        run: |
          echo "${{ secrets.PASSWORD }}" > private.key
          chmod 600 private.key
          ssh -vvv -i private.key -p 22 ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_HOST }} "echo Connected!"

        #将文件上传至云服务器  
      - name: ssh-scp-deploy
        uses: marcodallasanta/ssh-scp-deploy@v1.2.0
        with:
          #本地打包后的文件目录
          local: ./dist/*
          #上传至远程服务器的目标目录
          remote: /home/vitepress/dist
          #远程服务器的地址
          host: ${{ secrets.REMOTE_HOST }}
          #远程服务器的用户名
          user: ${{ secrets.REMOTE_USERNAME }}
          #远程服务器的密钥（与密码二者选其一）
          password: ${{secrets.PASSWORD }}
          #上传后执行的脚本
          post_upload: sudo nginx -s reload
      
      - name: Reload Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: sudo nginx -s reload