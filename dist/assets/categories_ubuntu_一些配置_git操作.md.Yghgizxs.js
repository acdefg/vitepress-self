import{_ as s,c as a,a8 as e,o as t}from"./chunks/framework.CElktlHO.js";const c=JSON.parse('{"title":"git操作","description":"","frontmatter":{"title":"git操作","author":"Cici","date":"2024/11/04 23:56","isTop":false,"categories":["ubuntu"],"tags":["tool"]},"headers":[],"relativePath":"categories/ubuntu/一些配置/git操作.md","filePath":"categories/ubuntu/一些配置/git操作.md","lastUpdated":1730736460000}'),n={name:"categories/ubuntu/一些配置/git操作.md"};function l(r,i,h,p,o,d){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="git操作" tabindex="-1">git操作 <a class="header-anchor" href="#git操作" aria-label="Permalink to &quot;git操作&quot;">​</a></h1><h3 id="安装和设置git" tabindex="-1">安装和设置git <a class="header-anchor" href="#安装和设置git" aria-label="Permalink to &quot;安装和设置git&quot;">​</a></h3><ol><li>安装git</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>设置账户</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config --global user.name &quot;yourname&quot; </span></span>
<span class="line"><span>git config --global user.email &quot;youremail&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>替换的时候不用保留引号 3. 检查</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;yourname&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;youremail&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;acdefg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ljc512@outllok.com&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>替换的时候不用保留引号 3. 检查</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Or</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>会用 vim 打开一个文件，写着上面的信息</p><ol start="4"><li>生成公匙</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;youremail&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>提示的地方直接按 Enter</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ~/.ssh/id_rsa.pub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gedit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa.pub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看公匙，复制公匙</p><ol start="5"><li>添加到 github 后台 打开 github 个人主页，点击左上角头像，打开 setting，选择 SSH <img src="https://s2.loli.net/2022/05/03/fqpDbIJ81S5ej9W.png" alt=""><img src="https://s2.loli.net/2022/05/03/McjYFSmEKyhzwg6.png" alt=""> 添加，确认一下就可以了</li></ol><h3 id="git仓库设置" tabindex="-1">git仓库设置 <a class="header-anchor" href="#git仓库设置" aria-label="Permalink to &quot;git仓库设置&quot;">​</a></h3><h4 id="本地" tabindex="-1">本地 <a class="header-anchor" href="#本地" aria-label="Permalink to &quot;本地&quot;">​</a></h4><p>在本地新建目录/原有目录中输入</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>通过<code>git add files</code>，添加文件或者文件夹到版本库 option：files <code>git status</code>可以查看跟踪状态 <code>git commit -m &quot;description&quot;</code> 上传到版本库option：description <code>git commit -am &quot;description&quot;</code> git commit -m用于提交暂存区的文件，git commit -am用于提交跟踪过的文件(obsidian上传推荐用这个)。 <code>git log</code> 查看上传记录 会给出commit id和上传时写的description <code>git reset --hard HEAD^</code> 返回上一个版本 --hard参数之后再解释 上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code></p><h4 id="远程仓库" tabindex="-1">远程仓库 <a class="header-anchor" href="#远程仓库" aria-label="Permalink to &quot;远程仓库&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:acdefg/obsidian_note.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>git branch -M main</code> 改分支名字，可以不改，默认是master，第三句变为<code>git push -u origin master</code></p><h3 id="obsidian使用git备份" tabindex="-1">obsidian使用git备份 <a class="header-anchor" href="#obsidian使用git备份" aria-label="Permalink to &quot;obsidian使用git备份&quot;">​</a></h3><p>安装obsidian_git插件，这个只是一个自动上下拉的插件，得先按前面的方法配置好远程仓库和本地仓库的链接。 还可以用gitee：git commit -m用于提交暂存区的文件，git commit -am用于提交跟踪过的文件。</p><h3 id="删除操作" tabindex="-1">删除操作 <a class="header-anchor" href="#删除操作" aria-label="Permalink to &quot;删除操作&quot;">​</a></h3><p>删除掉已经commit的文件，因为太大了一直导致push失败 参考链接：先看1，再看2</p><ol><li><a href="https://cloud.tencent.com/developer/article/1536481" target="_blank" rel="noreferrer">Git清理commit中历史提交的大文件 - 腾讯云开发者社区-腾讯云</a></li><li><a href="https://www.hollischuang.com/archives/1708" target="_blank" rel="noreferrer">记一次删除Git记录中的大文件的过程-HollisChuang&#39;s Blog</a>---看这个就行了</li></ol><h3 id="解决冲突" tabindex="-1">解决冲突 <a class="header-anchor" href="#解决冲突" aria-label="Permalink to &quot;解决冲突&quot;">​</a></h3><p><a href="https://blog.csdn.net/fish_skyyyy/article/details/119539747" target="_blank" rel="noreferrer">git如何解决冲突？_蛞蝓不孤寡的博客-CSDN博客_git怎么处理冲突</a> 应该可以设置一下 merge 规则</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [冲突文件]  （取本地）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [冲突文件]  （取远程端）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2023.10.29&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>一些教程记录 <a href="https://blog.csdn.net/qq_34842671/article/details/70916587" target="_blank" rel="noreferrer">Fetching Title#15ws</a> ---win下git安装教程 <a href="https://blog.csdn.net/Babylonxun/article/details/126598477" target="_blank" rel="noreferrer">Git: ‘LF will be replaced by CRLF the next time Git touches it‘ 问题解决与思考_Babylonxun的博客-CSDN博客</a><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noreferrer">Fetching Title#ty7c</a> --git教程 --廖雪峰</p><p><a href="https://zhuanlan.zhihu.com/p/264995020" target="_blank" rel="noreferrer">详解gitignore的使用方法，让你尽情使用git add . - 知乎</a></p><p>测试一下 obsidian_git</p><h3 id="使用过程的问题-log" tabindex="-1">使用过程的问题 log <a class="header-anchor" href="#使用过程的问题-log" aria-label="Permalink to &quot;使用过程的问题 log&quot;">​</a></h3><p>bad objects： <a href="https://stackoverflow.com/questions/8788975/bitbucket-git-error-did-not-send-all-necessary-objects/70957667#70957667" target="_blank" rel="noreferrer">BitBucket Git Error: did not send all necessary objects - Stack Overflow</a></p><h3 id="其他用户修改上传" tabindex="-1">其他用户修改上传 <a class="header-anchor" href="#其他用户修改上传" aria-label="Permalink to &quot;其他用户修改上传&quot;">​</a></h3><ol><li>下载仓库，初始化仓库 git init</li><li>添加远程仓库（不要用 https，用 git@）<code>git remote add origin git@github.com:acdefg/obsidian_note.git</code><br> git branch -M main</li><li>给仓库添加共同协作者</li><li>给仓库添加 ssh key（不确定有没有影响）</li></ol><h3 id="git-将本地修改后的文件提交到远程" tabindex="-1">git 将本地修改后的文件提交到远程 <a class="header-anchor" href="#git-将本地修改后的文件提交到远程" aria-label="Permalink to &quot;git 将本地修改后的文件提交到远程&quot;">​</a></h3><p>**一 提交代码到远程 **</p><p>初始化版本库： git init 添加文件到版本库（只是添加到缓存区），. 代表添加文件夹下所有文件 git add . 把添加的文件提交到版本库，并填写提交备注(必不可少) git commit -m “update readme” 把本地库与远程库关联（如果已经有 origin 关联则可以忽略） git remote add origin 你的远程库地址 推送（提交）代码： git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; 如：git push origin(主机名) master(本地分支名):master(远程分支名) 若需要提交指定文件：</p><ol><li>先查看更改的文件： git status 查看仓库状态</li><li>指定提交文件 git add src/components/文件名 添加需要提交的文件名（加路径–参考 git status 打印出来的文件路径）</li><li></li></ol><p>git stash -u -k 忽略其他文件，把现修改的隐藏起来，这样提交的时候就不会提交未被 add 的文件 4.git commit -m “哪里做了修改可写入…” 5.git pull 拉取合并 6.git push 推送到远程仓库 7.git stash pop 恢复之前忽略的文件 8. 若需要撤销 add 的某个文件:git reset 文件名</p><p><strong>若需要撤销指定的某次提交（已经提交到远程）：</strong></p><ol><li>先 git log 查看 commit ID</li><li>执行 git reset –-soft &lt;版本号&gt; ，如 git reset --soft 4f5e9a90edeadcc45d85f43bd861a837fa7ce4c7 ，重置至指定版本的提交，达到撤销提交的目的</li><li>执行 git push origin 分支名 –-force ，强制提交当前版本号。此时远程库回滚完成。</li><li>随后可以再次使用 status 重新提交</li></ol><p>若出现“fatal: Not a git repository: mmdetection/…/.git/modules/mmdetection“之类的命令， 网上说 git init 可以解决，但我这儿不行；解决办法是 cd mmdetection，把里面的.git 删除，即 rm -rf .git*</p><p><strong>git 本地创建分支 并推送到远程新分支：</strong> git checkout -b dbg_lichen_star 参考：<a href="https://blog.csdn.net/ljj_9/article/details/79386306" target="_blank" rel="noreferrer">https://blog.csdn.net/ljj_9/article/details/79386306</a></p><p>参考： <a href="https://blog.csdn.net/zcw4237256/article/details/78542122" target="_blank" rel="noreferrer">https://blog.csdn.net/zcw4237256/article/details/78542122</a><a href="https://www.cnblogs.com/qqhfeng/p/13380210.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/qqhfeng/p/13380210.html</a><a href="https://blog.csdn.net/f0rd_/article/details/117434986" target="_blank" rel="noreferrer">https://blog.csdn.net/f0rd_/article/details/117434986</a></p><p><a href="https://www.cnblogs.com/chaoxiZ/p/9714085.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/chaoxiZ/p/9714085.html</a></p><p><strong>二 拉取代码到本地, 且不覆盖本地已有代码</strong> 1.git stash 2.git pull 3.git stash pop 4.git stash list <a href="https://blog.csdn.net/weixin_40367126/article/details/104197540" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_40367126/article/details/104197540</a><a href="https://zhuanlan.zhihu.com/p/403557624" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/403557624</a></p><p><strong>三 切换不同分支</strong> git checkout (如果另一个分支有相同的文件, 可能会引起覆盖警告, 可以先 stash 起来)</p><p><strong>四 自己的分支修改之后merge到主分支</strong> git checkout master git merge --no-ff 自己的分支名</p><p>参考:<a href="https://blog.csdn.net/default7/article/details/123425422" target="_blank" rel="noreferrer">https://blog.csdn.net/default7/article/details/123425422</a></p><h2 id="reference-h" tabindex="-1">reference h <a class="header-anchor" href="#reference-h" aria-label="Permalink to &quot;reference h&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/87680115" target="_blank" rel="noreferrer">Git实用教程（三） | Git本地库操作（仓库初始化、提交修改） - 知乎</a></p>`,62)]))}const k=s(n,[["render",l]]);export{c as __pageData,k as default};
